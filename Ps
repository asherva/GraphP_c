param(
    [switch]$Once,   # סריקה חד פעמית
    [switch]$Loop    # ניטור מתמשך
)

# קידוד למסוף וללוג
chcp 65001
$OutputEncoding = [System.Text.Encoding]::UTF8

# קובץ לוג
$logFile = "C:\Logs\HyperPortMonitor.log"

# פרמטרים גלובליים לשימוש פנימי
$Global:PortConflictDetected = $false
$Global:PortConflictDetails  = @()

# פונקציה שמחזירה את כל הפורטים ש-Hyper מאזין עליהם
function Get-HyperPorts {
    try {
        $hyper = Get-Process -Name "hyperd" -ErrorAction Stop
        # בוחרים פורטים ייחודיים בלבד לפי מספר פורט
        Get-NetTCPConnection -State Listen | Where-Object { $_.OwningProcess -eq $hyper.Id } | Select-Object -Unique LocalPort,OwningProcess
    }
    catch {
        return $null
    }
}

# פונקציה שמחזירה מי מחזיק פורט מסוים
function Get-PortOwner($port) {
    $conn = Get-NetTCPConnection -State Listen | Where-Object { $_.LocalPort -eq $port }
    if ($conn) {
        $proc = Get-Process -Id $conn.OwningProcess -ErrorAction SilentlyContinue
        return $proc.ProcessName
    }
    return $null
}

# פונקציה אחת לסריקה
function Run-Scan {
    $hyperPorts = Get-HyperPorts
    if ($hyperPorts) {
        foreach ($hp in $hyperPorts) {
            $ownerName = Get-PortOwner $hp.LocalPort
            $attemptedBy = "hyperd.exe"
            $time = Get-Date -Format "yyyy-MM-dd HH:mm:ss"

            # בדיקה אם הפורט כבר נרשם – מניעת כפילויות
            if (-not ($Global:PortConflictDetails.Port -contains $hp.LocalPort)) {

                if ($ownerName -ne $attemptedBy) {
                    $msg = "$time ⚠ פורט $($hp.LocalPort) נתפס ע״י $ownerName (מנסה: $attemptedBy)"
                    Write-Host $msg -ForegroundColor Red
                    Add-Content -Pa
